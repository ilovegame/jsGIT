var rM = require('refs');

var getRemotesNames = function(repoPath, callback) {
	var refsManager = new rM.Refs(repoPath, function(err) {
		if (err) {
			callback(err, '');
			return;
		}
		refsManager.getRemotesNames(function(err, names) {
			if (err) {
				callback(err, '');
				return;
			}
			callback('', names);
			return;
		});
	});
}

var getRemoteBranches = function(repoPath, remoteName, callback) {
	var refsManager = new rM.Refs(repoPath, function(err) {
		if (err) {
			callback(err, '');
			return;
		}
		refsManager.getRemoteBranchesNames(remoteName, function(err, branchesNames) {
			if (err) {
				callback(err, '');
				return;
			}
			callback('', branchesNames);
			return;
		});
	});
}

var getRemoteBranchDetails = function(repoPath, remote, branch, callback) {
	var refsManager = new rM.Refs(repoPath, function(err) {
		if (err) {
			callback(err, '');
			return;
		}
		refsManager.getBranchDetails(remote, branch, function(err, details) {
			if (err) {
				callback(err, '');
				return;
			}
			callback('', details);
			return;
		});
	});
}

var addNewRemote = function(repoPath, remoteName, callback) {
	var refsManager = new rM.Refs(repoPath, function(err) {
		if (err) {
			callback(err);
			return;
		}
		refsManager.addRemote(remoteName, function(err) {
			if (err) {
				callback(err);
				return;
			}
			callback('');
		})
	});
}

var removeRemote = function(repoPath, remoteName, callback) {
	var refsManager = new rM.Refs(repoPath, function(err) {
		if (err) {
			callback(err);
			return;
		}
		refsManager.removeRemote(remoteName, function(err) {
			if (err) {
				callback(err);
				return;
			}
			callback('');
			return;
		});
	});
}

exports.getRemoteBranchDetails = getRemoteBranchDetails;
exports.getRemoteBranches = getRemoteBranches;
exports.getRemotesNames = getRemotesNames;
exports.addNewRemote = addNewRemote;
exports.removeRemote = removeRemote;
