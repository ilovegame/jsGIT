var fs = require('fs');


var walk = function(dir, done) {
    var error = false;
    var doJob = function(dir, recursiveDir, callback) {
        var filenames = {};
        var additionalDict = {};
        var slash = '/';
        if (dir.length >= 1 && dir[dir.length - 1] === '/') 
        slash = '';
        fs.readdir(dir, function(err, list) {
            if (error) return;
            if (err) {
                error = true;
                done(err);
                return;
            }       
            var pending = list.length;
            if (!pending) return callback(null, filenames);
            list.forEach(function(file) {
                if(file === '.git') {
                    --pending;
                    return;
                }
                var originalFile = file;
                file = dir + slash + file;
                fs.stat(file, function(err, stat) {
                    if (error) return;
                    if (err) {
                        error = true;
                        done(err);
                        return;
                    }     
                    if (stat && stat.isDirectory()) {
                        doJob(file, recursiveDir + originalFile + '/', function(err, res) {
                            for (var attrname in res) { filenames[attrname] = res[attrname]; }
                            if (!--pending) callback(null, filenames);
                        });
                    } else {
                        filenames[recursiveDir + originalFile] = {mtime : stat.mtime.getTime() / 1000};
                        if (!--pending) callback(null, filenames);
                    }
                });
            });
        });
    }
    doJob(dir, '', done);
};

//sorted names
//dict mtimes

exports.walk = walk;
