var refs = require('refs');
var tag = require('tag');
var utils = require('utils');

// Gets all tags from refs and packed refs
// @param repoPath - path of .git dir
// @param callback - function(err, tags), where tags is array
function getTags (repoPath, callback)
{
    var refsObj = new refs.Refs(repoPath, function(err) {
        if (err)
        {
            callback(err, null);
        }
        refsObj.getTagsNames(function (err, tags){
            if (err)
            {
                callback(err, null);
            }
            else
            {
                callback(null, tags);
            }
        });
    });
}

// Creates tag
// @param repoPath - path of .git dir
// @param author - string, tagger name
// @param authorMail - string, tagger mail
// @param name - tag name
// @param description - tag description
// @param commitSha1 - sha1 of commit to tag
// @param callback - function(err)
function addTag (repoPath, author, authorMail, name, description, commitSha1, callback)
{
    var time = utils.getTime();
    var tagger = new utils.OperationDetails(author, authorMail, time[0], time[1]);
    var tagObj = new tag.Tag(commitSha1, 'commit', name, description, tagger);

    tagObj.save(repoPath, function(err) {
        if (err)
        {
            callback(err);
        }
        else
        {
            var refsObj = new refs.Refs(repoPath, function(err) {
                if (err)
                {
                    callback(err, null);
                }
                else
                {
                    var sha1 = tagObj.getSha1();
                    refsObj.createTag(name, sha1, function (err, tags){
                        callback(err);
                    });
                }
            });
        }
    });
}

// Removes tag from refs/packed refs
// @param repoPath - path of .git dir
// @param name - tag name
// @param callback - function(err)
function removeTag (repoPath, name, callback)
{
    var refsObj = new refs.Refs(repoPath, function(err) {
        if (err)
        {
            callback(err, null);
        }
        else
        {   
            refsObj.removeTag(name, function(err) {
                callback(err);
            });
        }
    });
}

exports.getTags = getTags;
exports.addTag = addTag;
exports.removeTag = removeTag;