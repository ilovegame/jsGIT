var zlib = require('zlib')
var utils = require('utils')
var inflate = zlib.createInflate();
var inflate2 = zlib.createInflate();
var deflate = zlib.createDeflate();

inflate.on('readable', function(){
    console.log('readable');
});
inflate.on('end', function(){
    console.log('end');
});
inflate.on('data', function(data){
    console.log('data:'+data);
});
inflate.on('error', function(){
    console.log('error');
});
inflate.on('drain', function(){
    console.log('drain');
});
inflate.on('finish', function(){
    console.log('finish');
});
var def1 = ""
utils.deflateOpts("data data data", function(err, def){
   def1 = def;
   inflate.write(def);
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write("aaaaaaaaaaaaaaaaaaaaaadtes test");
   inflate.write(def);
   utils.deflateOpts("data data datazzzz", function(err, def2){
       inflate.write(def2);
   });
});

inflate2.on('readable', function(){
    console.log('readable');
});
inflate2.on('end', function(){
    console.log('end');
});
inflate2.on('data', function(data){
    //console.log('data:'+data);
    //console.log('data');
});
inflate2.on('error', function(){
    console.log('error');
});
inflate2.on('drain', function(){
    console.log('drain');
});
inflate2.on('finish', function(){
    console.log('finish');
});
inflate2.on('unpipe', function(){
    console.log('unpipe');
});
inflate2.on('pipe', function(){
    console.log('pipe');
});
defl = [];
deflate.on('data', function(dat){
    defl.push(dat);
})
inflate.write(def1);
deflate.pipe(inflate2);
for(var i = 0; i < 10000; i++)
{
   deflate.write("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
   
}
//deflate.unpipe();
//inflate2.write("dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd");
/*
Read:
Event: 'readable'
Event: 'end'
Event: 'data'
Event: 'error'
Event: 'close'
Write:
Event: 'drain'
Event: 'close'
Event: 'finish'
-Event: 'pipe'
-Event 'unpipe'
 */


