var iFM = require('indexFile');
var bM = require('blob.js');

var gitAddOneFile = function(path, repoPath, callback) {
    var jobsCompleted = 0;
    var jobsAll = 2;
    var indexFileManager = new iFM.Index(repoPath, function() {
    	indexFileManager.addObject(path, function() {
    		++jobsCompleted;

    		if (jobsCompleted == jobsAll) {
    			callback();	
    		}
    	});
    	bM.saveFileAsBlob(path, repoPath, {}, function() {
    		++jobsCompleted;

    		if (jobsCompleted == jobsAll) {
    			callback();	
    		}
    	});
    });
}

// I am not sure if async will work correctly
var gitAddManyFiles = function(paths, repoPath, callback) {
	var jobsCompleted = 0;
	var jobsAll = paths.length * 2;
	var indexFileManager = new iFM.Index(repoPath, function() {
		for(var index in paths) {
			indexFileManager.addObject(paths[index], function() {
				++jobsCompleted;
				if (jobsCompleted == jobsAll) {
					indexFileManager.creteIndexFile(function() {
						callback();
					});
				}
			});
			bM.saveFileAsBlob(paths[index], repoPath, {}, function() {
				++jobsCompleted;
				if (jobsCompleted == jobsAll) {
					indexFileManager.creteIndexFile(function() {
						callback();
					});
				}
			});
		}
	});
}

var gitRemoveOneFile = function(path, repoPath, callback) {
	var indexFileManager = new iFM.Index(repoPath, function() {
    	indexFileManager.removeObject(path, function() {
    		callback();
    	});
    });
}

var gitRemoveManyFiles = function(paths, repoPath, callback) {
	var filesRemoved = 0;
	var indexFileManager = new iFM.Index(repoPath, function () {
		for(var index in paths) {
			indexFileManager.removeObject(paths[index], function () {
				++filesRemoved;
				if (filesRemoved == paths.length) {
					indexFileManager.creteIndexFile(function() {
						callback();
					});
				}
			});
		}
	});
}

//Not yet complete - How to get content file from blob?
var gitGetFileContent = function(path, callback) {
	var indexFileManager = new iFM.Index(repoPath, function () {
		indexFileManager.getObject(path, function(object) {
			var returnInfo = new Array();
			returnInfo['ContentLength'] = object.size;
			callback(returnInfo);
		});
	});
}

exports.gitAddOneFile = gitAddOneFile;
exports.gitAddManyFiles = gitAddManyFiles;
exports.gitRemoveOneFile = gitRemoveOneFile;
exports.gitRemoveManyFiles = gitRemoveManyFiles;
exports.gitGetFileContent = gitGetFileContent;
