var rM = require('refs');

var getBranches = function(pathRepo, callback) {
	var refsManager = new rM.Refs(pathRepo, function(err) {
		if (err) {
			callback(err, '');
			return;
		}
		refsManager.getBranchesNames(function(err, branches) {
			if (err) {
				callback(err, '');
				return;
			}
			callback('', branches);
			return;
		});
	});
}

var getBranchesMetadata = function(pathRepo, callback) {
	var refsManager = new rM.Refs(pathRepo, function(err) {
		if (err) {
			callback(err, '');
			return;
		}
		refsManager.getBranchesNamesWithActiveMarks(function(err, metadata) {
			if (err) {
				callback(err, '');
				return;
			}
			callback('', metadata);
			return;
		});
	});
}

var createBranch = function(pathRepo, name, callback) {
	var refsManager = new rM.Refs(pathRepo, function(err) {
		if (err) {
			callback(err);
			return;
		}
		refsManager.getSHA_1OfTheActiveBranch(function(err, SHA_1) {
			if (err) {
				callback(err);
				return;
			}
			refsManager.createBranch(name, SHA_1, function(err) {
				if (err) {
					callback(err);
					return;
				}
				callback('');
				return;
			});
		});
	});
}

var removeBranch = function(pathRepo, name, callback) {
	var refsManager = new rM.Refs(pathRepo, function(err) {
		if (err) {
			callback(err);
			return;
		}
		refsManager.removeBranch(name, function(err) {
			if (err) {
				callback(err);
				return;
			}
			callback('');
			return;
		});
	});
}

exports.getBranches = getBranches;
exports.getBranchesMetadata = getBranchesMetadata;
exports.createBranch = createBranch;
exports.removeBranch = removeBranch;