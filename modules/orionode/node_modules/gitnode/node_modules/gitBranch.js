var rM = require('refs');

var getBranches = function(pathRepo, callback) {
	var refsManager = new rM.Refs(pathRepo, function() {
		refsManager.getBranchesNames(function(branches) {
			callback(branches);
		});
	});
}

var getBranchesMetadata = function(pathRepo, callback) {
	var refsManager = new rM.Refs(pathRepo, function() {
		refsManager.getBranchesNamesWithActiveMarks(function(metadata) {
			callback(metadata);
		});
	});
}

var createBranch = function(pathRepo, name, callback) {
	var refsManager = new rM.Refs(pathRepo, function() {
		refsManager.getSHA_1OfTheActiveBranch(function (SHA_1) {
			refsManager.createBranch(name, SHA_1, function() {
				callback();
			});
		});
	});
}

var removeBranch = function(pathRepo, name, callback) {
	var refsManager = new rM.Refs(pathRepo, function() {
		refsManager.removeBranch(name, function() {
			callback();
		});
	});
}

exports.getBranches = getBranches;
exports.getBranchesMetadata = getBranchesMetadata;
exports.createBranch = createBranch;
exports.removeBranch = removeBranch;